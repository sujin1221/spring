package com.myweb.www.handler;

import java.io.File;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

import org.springframework.stereotype.Component;
import org.springframework.web.multipart.MultipartFile;

import com.myweb.www.domain.FileVO;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Component //사용자 클래스를 빈으로 등록
public class FileHandler {
	private final String UP_DIR = "D:\\_myProject\\_java\\_fileUpload"; //파일경로 변경 못하게...
	
	public List<FileVO> uploadFiles(MultipartFile[] files){
		List<FileVO> flist = new ArrayList<>();
		//FileVO 생성, 실제 파일을 경로에 맞춰서 저장, 썸네일 저장
		//날짜를 폴더로 생성하여 그날 그날 업로드 파일을 관리
		LocalDate date = LocalDate.now(); //오늘 날짜를 폴더로 구성
		String today = date.toString(); //string으로 저장
		today = today.replace("-", File.separator); //운영체제마다 모양이 다름! ('-' ->'\\')
		
		//기존라인 뒤에다가 오늘의 날짜를 붙여줄거임 => 폴더
		File folders = new File(UP_DIR, today); //파일의 풀 경로
		
		//폴더 생성
		//exists: 있는지 없는지 확인하는 역할
		//mkdir(): 하나의 폴더만 생성 | mkdirs(): 파일 여러개 동시에 생성
		if(!folders.exists()) {
			//없다면?
			folders.mkdirs();
		}
		//files 객체에 대한 설정
		for(MultipartFile file : files) {
			FileVO fvo = new FileVO(); //fileVO 하나씩 생성
			fvo.setSaveDir(today); //기본제외 오늘날짜만...
			fvo.setFileSize(file.getSize());
			
			String originalFileName = file.getOriginalFilename();
			String fileName = originalFileName.substring
					(originalFileName.lastIndexOf(File.separator)+1);
			log.info(fileName);
		}
		return flist;
	}
	
}
